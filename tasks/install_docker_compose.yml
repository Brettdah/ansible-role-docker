---
- name: install_docker_compose | Be sure there is a link for pip3
  shell: if [ -h /usr/bin/pip3 ]; then echo "linked"; else cd /usr/bin/; ln -s $(ls | grep pip3) pip3; fi
  register: create_link
  changed_when: create_link.stdout != 'linked'

- name: install_docker_compose | remove old pip docker-compose dependencies
  pip:
    executable: "{{ docker_python_pip_bin | default('pip3') }}"
    name:
      - dockerpty
      - docker-pycreds
      - docker
      - docker-py
    state: "absent"

- name: install_docker_compose | include install_docker_compose_bin
  include: install_docker_compose_bin.yml
  when: not docker_compose_by_pip | bool

- name: install_docker_compose | include install_docker_compose_pip
  include: install_docker_compose_pip.yml
  when: docker_compose_by_pip | bool

- name: install_docker_compose | ensure pip docker dependencies are installed
  pip:
    executable: "{{ docker_python_pip_bin | default('pip3') }}"
    name:
      - docker
    state: "present"

# docker login bug
- name: install_docker_compose | remove golang-docker-credential-helpers
  apt:
    name: golang-docker-credential-helpers
    state: absent
  when: ansible_os_family == 'Debian'

- name: install_docker_compose | get docker compose version # noqa 301
  command: "docker-compose version --short"
  register: docker_compose_current_result
  ignore_errors: yes

- name: install_docker_compose | set docker-compose version fact
  set_fact:
      docker_compose_current_version: "{{ docker_compose_current_result.stdout | default('') }}"
  register: docker_compose_version_fact_result

- name: install_docker_compose | download docker compose bash completion script
  get_url:
    url: 'https://raw.githubusercontent.com/docker/compose/{{ docker_compose_current_version }}/contrib/completion/bash/docker-compose'
    dest: /etc/bash_completion.d/docker-compose
    mode: 0644
  ignore_errors: yes
  when: docker_compose_current_version is defined and docker_compose_current_version
