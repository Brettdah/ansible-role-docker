---
- name: ensure overlay kernel module is loaded
  modprobe:
    name: overlay
    state: present
  when: docker_enable_overlay|bool

- name: enable overlay on boot
  lineinfile:
    path: /etc/modules
    line: 'overlay'
  when: docker_enable_overlay|bool

- name: add docker repository GPG key
  apt_key:
    url: "{{ docker_apt_key_url }}"
    state: present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: add docker main repository
  apt_repository:
    repo: "deb [arch={{ docker_apt_archs[ansible_architecture]|default('amd64') }}] {{ docker_apt_url }} {{ 'artful' if ansible_distribution_version is version('18.04', '>')  else ansible_distribution_release }} stable {{ docker_extra_repo|default('') }}"
    state: present
    filename: "docker_official"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  register: docker_apt_result

- name: ensure right permissions on apt sources list
  file:
    path: /etc/apt/sources.list.d/docker_official.list
    owner: root
    group: root
    mode: 'u=rw,g=r,o=r'

- name: apt update list for new docker repository
  apt:
    update_cache: yes
  when: docker_apt_result.changed|bool

- name: install docker dependencies
  apt:
    name: "{{ docker_debian_dependencies }}"
    state: present

- name: install docker engine
  apt:
    name: "{{ docker_apt_package }}{{ ('=' ~ docker_version) if docker_version != '' and docker_version != 'latest' else '' }}"
    state: "{{ 'present' if docker_version != '' and docker_version != 'latest' and docker_state == 'latest' else docker_state }}"
