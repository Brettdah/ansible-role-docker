---
- name: install_docker_machine | get docker machine version # noqa 301
  shell: "docker-machine --version | cut -d ' ' -f 3 | cut -d ',' -f 1"
  register: docker_machine_result
  ignore_errors: yes

- name: install_docker_machine | set docker machine current version fact
  set_fact:
      docker_machine_current_version: "{{ docker_machine_result.stdout | default('') }}"
  register: docker_machine_version_fact_result

- name: install_docker_machine | get latest stable docker-machine tag
  uri:
    url: "{{ docker_machine_release_api_url }}"
  ignore_errors: yes
  register: docker_machine_github_result
  when: docker_machine_version == 'latest'

- name: install_docker_machine | set docker machine latest version fact
  set_fact:
    docker_machine_version: "{{ docker_machine_github_result.json.tag_name | default(docker_machine_default_version)|replace('v','') }}"
  when: docker_machine_version == 'latest'

- name: install_docker_machine | set docker machine version fact
  set_fact:
    docker_machine_version: "{{ docker_machine_default_version }}"
  when: not docker_machine_version

- name: install_docker_machine | "download docker machine {{ docker_machine_version }}"
  get_url:
    url: '{{ docker_machine_base_url }}/v{{ docker_machine_version }}/docker-machine-{{ ansible_system }}-{{ ansible_architecture }}'
    dest: /usr/local/bin/docker-machine
    mode: '0755'
    force: yes
  when: docker_machine_current_version != docker_machine_version

- name: install_docker_machine | download docker machine bash completion script
  get_url:
    url: "https://raw.githubusercontent.com/docker/machine/v{{ docker_machine_version }}/contrib/completion/bash/{{ item }}.bash"
    dest: "/etc/bash_completion.d/{{ item }}"
    mode: '0644'
  ignore_errors: yes
  with_items:
    - docker-machine
    - docker-machine-prompt
    - docker-machine-wrapper
